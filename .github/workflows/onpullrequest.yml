name: Simple Test

on:
  pull_request:
    branches:
      - main
    tags-ignore:
      - 'v*' # this tag type is used for release pipelines

jobs:
  test-pipeline:

    runs-on: ubuntu-latest

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
     #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run unit tests
        run: |
          source .venv/bin/activate
          pytest tests/

      - name: Deploy integration test
        working-directory: ${{ github.workspace }}
        env: 
          DATABRICKS_HOST: ${{secrets.DATABRICKS_HOST}}
          DATABRICKS_TOKEN: ${{secrets.DATABRICKS_TOKEN}}
        run: |
            source .venv/bin/activate
            ls
            dbx deploy --workflows=dbx-wheel-example
      - name: Run integration test
        run: | 
              dbx launch --trace dbx-wheel-example